{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","allTodos","App","useState","setTitle","currUser","selectUser","setTodos","errorTitle","setErrorTitle","errorUser","setErrorUser","onSubmit","event","preventDefault","sort","a","b","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e44e568.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/user';\n\nconst findUserById = (userId: number) => (\n  usersFromServer.find(user => user.id === userId) as User\n);\n\nconst allTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App: React.FC<{}> = () => {\n  const [title, setTitle] = useState('');\n  const [currUser, selectUser] = useState('');\n  const [todos, setTodos] = useState(allTodos);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const getMaxId = () => {\n    const sortById = todos.sort((a, b) => b.id - a.id);\n    const maxId = sortById[0].id;\n    const output = maxId + 1;\n\n    return output;\n  };\n\n  const addUser = () => {\n    setErrorTitle(!title);\n    setErrorUser(!currUser);\n\n    if (title && currUser) {\n      setTodos([\n        ...todos,\n        {\n          id: getMaxId(),\n          title,\n          completed: false,\n          userId: +currUser,\n          user: findUserById(+currUser),\n        },\n      ]);\n\n      selectUser('');\n      setTitle('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          addUser();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"ex: clean badroom\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n          />\n\n          {errorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectInput\">User: </label>\n          <select\n            id=\"selectInput\"\n            data-cy=\"userSelect\"\n            value={currUser}\n            onChange={(event) => {\n              selectUser(event.target.value);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}